---
- hosts: all

  tasks:
    - name: update system packages...
      become: yes
      become_method: sudo
      apt:
        cache_valid_time=86400
        update_cache=yes
        upgrade=safe
      ignore_errors: yes

    - name: install apt packages...
      become: yes
      become_method: sudo
      apt: name="{{ item }}"
        update_cache=yes
        cache_valid_time=864000
        state=present
      with_items:
        - "{{ apt_install_packages }}"

    - name: install pear packages...
      become: yes
      become_method: sudo
      pear: name="{{ item }}"
        state=present
      with_items:
        - "{{ pear_packages }}"

    - name: install node packages...
      become: yes
      become_method: sudo
      npm: name="{{ item }}"
        global=yes
      with_items:
        - "{{ node_packages }}"

    - name: install ruby gems...
      become: yes
      become_method: sudo
      action: command gem install sass creates=/usr/local/bin/sass
      with_items:
        - "{{ ruby_gems }}"

    - name: template configuration that require root into place...
      become: yes
      become_method: sudo
      template: src="{{ item.src }}" dest="{{ item.dest }}"
      with_items:
        - "{{ root_template_files }}"

    - name: install wp-cli...
      become: yes
      become_method: sudo
      get_url:
        url=https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        dest=/usr/local/bin/wp
        sha256sum=f615d57957e66a09f57acc844a1fc5402e9fa581dcb387bbe1affc4d155baf9d
        mode=555
      ignore_errors: yes
      
    - name: enable mod_rewrite...
      become: yes
      become_method: sudo
      apache2_module: state=present name=rewrite

    - name: start or restart services...
      become: yes
      become_method: sudo
      service:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
        enabled: true
      with_items: "{{ services }}"

    - name: remove /var/www/html
      become: yes
      become_method: sudo
      file: path=/var/www/html state=absent

    - name: symlink DocumentRoot to /vagrant/html
      become: yes
      become_method: sudo
      file:
        src=/vagrant/html
        dest=/var/www/html
        state=link
        force=yes

    - name: update the MySQL root password...
      become: yes
      become_method: sudo
      mysql_user:
        name: root
        host: "{{ item }}"
        password: "{{ mysql_root_password }}"
        check_implicit_admin: yes
        priv: "*.*:ALL,GRANT"
      with_items:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost

    - name: create app database...
      become: yes
      become_method: sudo
      mysql_db:
        name="{{ database_name }}"
        state=present

    - name: create database user for app...
      become: yes
      become_method: sudo
      mysql_user:
        name="{{ database_user }}"
        password="{{ mysql_app_password }}"
        priv="{{ database_name }}.*:ALL,GRANT"
        state=present

    - name: clone git repositories...
      git:
        repo="{{ item.repo }}"
        dest="{{ item.dest }}"
        version="{{ item.version }}"
        accept_hostkey=yes
      with_items: "{{ git_install_repos }}"

    - name: set path to Wordpress Coding Standards...
      become: yes
      become_method: sudo
      command: phpcs --config-set installed_paths /home/ubuntu/wpcs

    - name: creating the uploads dir...
      become: yes
      become_method: sudo
      file: path=/home/vagrant/uploads state=directory group=www-data mode=0775

    - name: symlink uploads dir...
      file: src=/home/vagrant/uploads dest=/vagrant/html/hrp-portal/wp-content/uploads state=link
      ignore_errors: yes

    - name: install node packages local to the project...
      npm:
        path: /vagrant/html/hrp-portal/wp-content/themes/isc-uw-child

    - name: template configuration into place...
      template: src="{{ item.src }}" dest="{{ item.dest }}"
      with_items:
        - "{{ template_files }}"

    - name: install wordpress core...
      shell: cd "/vagrant/html/hrp-portal/"; wp core install --url='localhost:8080/hrp-portal' --title='{{ item.title }}' --admin_user={{ item.user }} --admin_password={{ item.pass }} --admin_email={{ item.email }} --skip-email
      with_items: "{{ wp_core_install }}"
      ignore_errors: yes

    - name: create a password file...
      htpasswd: path="/vagrant/html/hrp-portal/.htpasswd" name={{ item.name }} password={{ item.password }}
      with_items: "{{ wp_users_info }}"
      ignore_errors: yes

    # Only IF the sql file is located in /vagrant
    - name: check for a sqldump to load...
      stat: path={{ database_file_path }}
      register: sql

    - name: load database into MySQL...
      become: yes
      become_method: sudo
      mysql_db: name={{ database_name }} state=import target={{ database_file_path }}
      when: sql.stat.exists

    - name: create users...
      shell: wp user create {{ item.name }} {{ item.email }} --user_pass={{ item.password }} --role={{ item.role }} --path='/vagrant/html/hrp-portal/'
      with_items: "{{ wp_users_info }}"
      ignore_errors: yes
